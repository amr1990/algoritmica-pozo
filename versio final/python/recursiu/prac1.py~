import sys

def readFile(f):

	f = open(f, "r")
	itemList = []
	for line in f.readlines():
		parsed_line = line.split();
		itemList.append((parsed_line[0],int(parsed_line[1])))

	return itemList


def sort_it(li):	
	cur_max_h = 0
	cur_max_l = []
	max_l = []	
	for tup in li:
		#each element
		cur_max_l = find_max(li[li.index(tup):])
		if len(cur_max_l) > len(max_l):
			max_l = cur_max_l

	return max_l


def find_max(li):
	max_l = []
	last = 0
	for line in li:
		#print last	
		if line[1] > last:
			max_l.append(line)
			last = line[1]

	return max_l


def sort_rec(li):
	if len(li) == 1:
		return li
	else:
		ms = find_max(li)
		if len(ms)>len(sort_rec(li[1:])):
			return ms
		else:
			return sort_rec(li[1:])

def patch_out(li):
	for el in li:
		print el[0], el[1]  


def rec_lol(li, last=0, volta=0):
	if len(li) == 0:
		return li
	
	max_li = rec_lol(li[1:], last, volta+1)
	
	i = li[0]
	

	if (i[1] > last):
		curr_li = [i] + rec_lol(li[1:], i[1], volta+1)
	
		if len(curr_li) >= len(max_li):
			max_li = curr_li

	return max_li

class Counter(object) :
    def __init__(self, fun) :
        self._fun = fun
        self.counter=0
    def __call__(self,*args, **kwargs) :
        self.counter += 1
        return self._fun(*args, **kwargs)

def factorial(x):
	
	if x <= 1:
		return x
	else:
		return x *factorial(x-1)		
		

if __name__ == '__main__':

	p1 = readFile(sys.argv[1])
	#p2 = sort_it(p1)
	#p2 = sort_rec(p1)
	rec_lol = Counter(rec_lol)
	p2 = rec_lol(p1)
	p3 = patch_out(p2)
	print rec_lol.counter

#	factorial = Counter(factorial)
#	print factorial(int(sys.argv[1]))
#	print factorial.counter












